##Description:  The following workflow shows a step-by-step process of generating the most popular female baby names.

#Rmarkdown, input and output datasets are contained in this repro under 'hmk5'
#Input data sets used are 'y0b2016', 'yob2015'.
#Output csv "Female_Names2.csv" generated by R code is found under 'hmk5' in this repo.
#Object created have descriptions in comments denoted by '#'


#Workflow

## 1.a First, import the .txt file into R so you can process it.
#set working directory
setwd("D:/SMU/DoingDataScience/Unit5")

#read in 'yob2016' file
BabyFile <- read.delim("yob2016.txt", header = FALSE,sep=";")
head(BabyFile)
        V1 V2    V3
1     Emma  F 19414
2   Olivia  F 19246
3      Ava  F 16237
4   Sophia  F 16070
5 Isabella  F 14722
6      Mia  F 14366

# create data frame from read file
df <- data.frame(BabyFile)
names(df) <- c("First Names","Gender","Name Count")

# display the first few rows
head(df)
  First Names Gender Name Count
1        Emma      F      19414
2      Olivia      F      19246
3         Ava      F      16237
4      Sophia      F      16070
5    Isabella      F      14722
6         Mia      F      14366

## 1.b Display the summary and structure of df

#summary of data frame
summary(df)
  First Names    Gender      Name Count     
 Aalijah:    2   F:18758   Min.   :    5.0  
 Aaliyan:    2   M:14111   1st Qu.:    7.0  
 Aamari :    2             Median :   12.0  
 Aarian :    2             Mean   :  110.7  
 Aarin  :    2             3rd Qu.:   30.0  
 Aaris  :    2             Max.   :19414.0  
 (Other):32857                              

#structure of data frame
 str(df)
'data.frame':	32869 obs. of  3 variables:
 $ First Names: Factor w/ 30295 levels "Aaban","Aabha",..: 9317 22546 3770 26409 12019 20596 6185 339 9298 11222 ...
 $ Gender     : Factor w/ 2 levels "F","M": 1 1 1 1 1 1 1 1 1 1 ...
 $ Name Count : int  19414 19246 16237 16070 14722 14366 13030 11699 10926 10733 ...
 
## 1.c Write an R command to figure out which name it is and display it.
# grep names that end in 'yyy'
grep("yyy$",df$`First Names`)
[1] 212

# confirm finding
df[212,]
    First Names Gender Name Count
212    Fionayyy      F       1547

## 1.d Upon finding the misspelled name, please remove this particular observation, as the client says it’s redundant. Save the remaining dataset as an object: y2016

# Remove observation and set to object y2016
y2016 <- df[-c(212),]

#Compare before and after
nrow(df)
[1] 32869
nrow(y2016)
[1] 32868



*******************************************************************

## 2.a Like 1a, please import the .txt file into R. Look at the file before you do. You might have to change some options to import it properly. Again, please give the dataframe human-readable column names. Assign the dataframe to y2015.

#read in file
BabyFile2015 <- read.delim("yob2015.txt", header = FALSE,sep=",")
head(BabyFile2015)
        V1 V2    V3
1     Emma  F 20415
2   Olivia  F 19638
3   Sophia  F 17381
4      Ava  F 16340
5 Isabella  F 15574
6      Mia  F 14871

# create data frame from file
y2015 <- data.frame(BabyFile2015)
names(y2015) <- c("First Names","Gender","Name Count")


## 2b) Display the last ten rows in the dataframe. Describe something you find interesting
about these 10 rows

# show last 10 rows
tail(y2015,10)
      First Names Gender Name Count
33054        Ziyu      M          5
33055        Zoel      M          5
33056       Zohar      M          5
33057      Zolton      M          5
33058        Zyah      M          5
33059      Zykell      M          5
33060      Zyking      M          5
33061       Zykir      M          5
33062       Zyrus      M          5
33063        Zyus      M          5

#There are some unsual but similar names that start with 'Zy'.


## 2.c Merge y2016 and y2015 by your Name column; assign it to final. The client only cares about names that have data for both 2016 and 2015; there should be no NA values in either of your amount of children rows after merging.
#merge data from y2015 and y2016
final2 <- merge(y2015,y2016,by="First Names")
#show top rows
head(final2)
  First Names Gender.x Name Count.x Gender.y Name Count.y
1       Aaban        M           15        M            9
2       Aabha        F            7        F            7
3   Aabriella        F            5        F           11
4       Aadam        M           22        M           18
5     Aadarsh        M           15        M           11
6       Aaden        M          297        M          194


## 3.a  Create a new column called “Total” in final that adds the amount of children in 2015 and 2016 together. In those two years combined, how many people were given popular names

final2$Totals <- final2$`Name Count.x` + final2$`Name Count.y`

#How many were given popular names?

#The top ten names seem popular and total 343,758.

## 3.b  Sort data by Total.  What were the top 10 most popular names?
final2_order <- final2[order(final2$Totals,decreasing = TRUE),]

head(final2_order,10)
      First Names Gender.x Name Count.x Gender.y Name Count.y Totals
9820         Emma        F        20415        F        19414  39829
23607      Olivia        F        19638        F        19246  38884
23258        Noah        M        19594        M        19015  38609
19277        Liam        M        18330        M        18138  36468
27782      Sophia        F        17381        F        16070  33451
3725          Ava        F        16340        F        16237  32577
21102       Mason        M        16591        M        15192  31783
30128     William        M        15863        M        15668  31531
13054       Jacob        M        15914        M        14416  30330
12698    Isabella        F        15574        F        14722  30296

## 3.c Omit boys.  Top 10 most popular girl's names

head(final2_order[final2_order$Gender.x == "F",],10)
      First Names Gender.x Name Count.x Gender.y Name Count.y Totals
9820         Emma        F        20415        F        19414  39829
23607      Olivia        F        19638        F        19246  38884
27782      Sophia        F        17381        F        16070  33451
3725          Ava        F        16340        F        16237  32577
12698    Isabella        F        15574        F        14722  30296
21722         Mia        F        14871        F        14366  29237
6509    Charlotte        F        11381        F        13030  24411
302       Abigail        F        12371        F        11699  24070
9799        Emily        F        11766        F        10926  22692
11838      Harper        F        10283        F        10733  21016


## 3.d  Write top 10 girl names and totals to csv.
#set final data frame
final_f <- head(final2_order[final2_order$Gender.x == "F",],10)
final_df <- data.frame(final_f$`First Names`,final_f$Totals)

#Update column names
names(final_df) <- c("First Names","Totals")

#Display rows
head(final_df,10)

#write to csv
write.csv(final_df, file="Female_Names2.csv",row.names = FALSE)




